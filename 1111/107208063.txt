
#### midterm

###1

ID <- seq(1,50)
math.score <- sample(0:100, 50, replace = T)
reading.score <- sample(40:100, 50, replace = T)

#(a)
set.seed(1)
grade <- cbind(ID, math.score, reading.score)
head(grade, 5)

     ID math.score reading.score
[1,]  1         72            75
[2,]  2         32            70
[3,]  3         18            54
[4,]  4         10            63
[5,]  5         59            93


#(b)
list(mean(reading.score), sd(reading.score))

[[1]]
[1] 71.48

[[2]]
[1] 15.6886

#(c)
temp <- math.score >= 60
temp1 <- reading.score >= 60
pass <- grade[temp == T & temp1 == T]
head(pass, 5)

[1]  1  6 14 17 18

#(d)
ave <- (math.score + reading.score)/2
tail(ave, 5)

[1] 53.5 67.5 80.5 56.0 51.5

#(e)
grade <- data.frame(grade)
grade$ID[ave == max(grade$ave)]

[1] 21

#(f)
grade$reading.score[math.score == min(grade$math.score)]

[1] 97

#(g)
tail(sort(grade$math.score), 50*0.1)

[1] 92 94 94 97 98

#(h)
temp2 <- math.score < 60
temp3 <- reading.score < 60
head(grade$ID[temp2 == T | temp3 == T], 5)

[1] 2 3 4 5 7



### 2

#(a)
y是一個indicator function，隨機抽出的x值，如果小於2，輸出5*1；如果等於2，輸出0*1；如果大於2，輸出(-3)*1。
  
#(b)
if(x < 2){
  y <- 5
} else if(x == 2){
  y <- 0
} else{
  y <- -3
}
y

[1] -3


###3

#(a)
game <- function(p){
  x <- 1
  a <- c()
  repeat{
    a[x] <- rbinom(1,1,p)
    x <- x + 1
    if(sum(a) == 2) break
  }
  return(x)
}

#(b)
n <- 500
p <- 0.005
output <- c()
for(i in 1:n){
  output[i] <- game(p)
}

#(c)
list(mean(output), sd(output))

[[1]]
[1] 392.868

[[2]]
[1] 265.6725



### 4

set.seed(4)
number <- sample(1:6, 10^6, replace = T, prob = c(1/4, 1/4, 1/4, 1/12, 1/12, 1/12))

#(a)
f <- function(k){
  a <- c()
  for(i in 1:k){
    a[i] <- (-1)^i*number[i]
    y <- sum(a)
  }
  return(y)
}
f(100)

[1] -11

#(b)
#令前N項和為S
S <- number[1]
M <- 1
while(S + number[M + 1] <= 100 ){
  S <- S + number[M + 1]
  M <- M + 1
}
M

[1] 35

#(c)
i <- 1
y <- c()
repeat{
  i <- i+1
  y <- unique(number[1:i])
  if(length(y) == 6) break
}
i

[1] 9


###　5

#(a)
pmf <- function(k){
  (exp(-2)*(2^k))/(factorial(k)*(1 - exp(-2)))
}

#(b)
n <- 20
S <- 0
for(i in 1:n){
  S <- pmf(i) + S
}
S

[1] 1


#(c)
s <- 0
x <- 0
repeat{
  x <- x + 1
  s <- s + pmf(x)
  if(x >= 15) break
}
s

[1] 1

#(d)
s <- 0
x <- 0
while(x < 10){
  x <- x + 1
  s <- s + pmf(x)
}
s

[1] 0.9999904



































