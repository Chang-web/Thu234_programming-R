
## quiz 1

# 1 

math1.score <- sample(0:100, 500, replace = T)

# (a)
> temp <- math1.score > 60
> sum(temp)
[1] 193

> # (b)
> odd <- math1.score[seq(1, 500, 2)]
> mean(odd)
[1] 46.996

> # (c)
> min(math1.score[math1.score > 60])
[1] 61

> # (d)
> t.stat <- function(math1.score){
+     t <- (math1.score - mean(math1.score))/sd(math1.score)
+     head(t, 10)
+ }
> t.stat(math1.score)
 [1] -1.4302371 -1.3303788  0.2340678 -0.9309456 -1.0973761 -0.7312290
 [7]  0.4337844 -1.4302371 -0.7312290  0.7666454

> # (e)
> math2.score <- sample(10:90, 500, replace = T)
> temp1 <- math1.score < 60
> temp2 <- math2.score < 60
> sum(ifelse(temp1 == T  & temp2 == T, 1, 0))
[1] 191

> # (f)
> temp3 <- math2.score > math1.score
> sum(temp3)/500
[1] 0.504

> # (g)
> weighted_score <- 0.65*math1.score + 0.35*math2.score
> tail(weighted_score, 10)
 [1] 55.35 65.70 78.20 49.20 28.30 46.20 25.35 67.10 41.30 76.05



# 2

# (a)
> n <- 1:10
> a <- 1:10
> b <- (1 + 1/n)^n
> c <-  ((-1)^(n + 1))/(2*n - 1)
> d <- (n + 3)/(n + 8)
> cbind(a, b, c, d)
       a        b           c         d
 [1,]  1 2.000000  1.00000000 0.4444444
 [2,]  2 2.250000 -0.33333333 0.5000000
 [3,]  3 2.370370  0.20000000 0.5454545
 [4,]  4 2.441406 -0.14285714 0.5833333
 [5,]  5 2.488320  0.11111111 0.6153846
 [6,]  6 2.521626 -0.09090909 0.6428571
 [7,]  7 2.546500  0.07692308 0.6666667
 [8,]  8 2.565785 -0.06666667 0.6875000
 [9,]  9 2.581175  0.05882353 0.7058824
[10,] 10 2.593742 -0.05263158 0.7222222

# (b)
先判斷: 如果x大於10，則輸出"超過10"；否則輸出"低於10"。
在x大於10的情況下，繼續判斷: 如果x大於20，輸出"且超過20"；否則輸出"但未超過20"。 



# 3
> var.random <- function(n){
+     k <- 1:n
+     prob <- 2*k/(n*(n + 1))
+     mu <- sum(k*prob)
+     var <- sum((k - mu)^2*prob)
+     return(var)
+ }
> var.random(50)
[1] 141.5556






